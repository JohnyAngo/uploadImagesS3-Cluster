{
  "service": {
    "service": "s3-gb97-images-pos",
    "serviceObject": {
      "name": "s3-gb97-images-pos"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "stage": "prod",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": "arn:aws:s3:::bucket-images-gb97-pos/*"
            }
          ]
        }
      },
      "environment": {
        "BUCKET": "bucket-images-gb97-pos"
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "SignedURLLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/s3-gb97-images-pos-prod-signedURL"
            }
          },
          "DeleteImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/s3-gb97-images-pos-prod-deleteImage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "s3-gb97-images-pos",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-gb97-images-pos-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-gb97-images-pos-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "s3-gb97-images-pos",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "BaseLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z/nodejs.zip"
              },
              "LayerName": "prd-dependencies",
              "CompatibleRuntimes": [
                "nodejs14.x"
              ]
            }
          },
          "SignedURLLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z/signedURL.zip"
              },
              "Handler": "signedurl/handler.signedS3URL",
              "Runtime": "nodejs14.x",
              "FunctionName": "s3-gb97-images-pos-prod-signedURL",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET": "bucket-images-gb97-pos"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignedURLLogGroup"
            ]
          },
          "DeleteImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z/deleteImage.zip"
              },
              "Handler": "deleteimg/handler.deleteImageFromS3",
              "Runtime": "nodejs14.x",
              "FunctionName": "s3-gb97-images-pos-prod-deleteImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET": "bucket-images-gb97-pos"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteImageLogGroup"
            ]
          },
          "SignedURLLambdaVersionlzRfPCG5ENoBJT42wUyQzcweWqlwzBgJQTamETh8bs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignedURLLambdaFunction"
              },
              "CodeSha256": "ymJ7BardWe+6/P0tyn3PQ2xhG29qxSq9dhvisrBLZm8="
            }
          },
          "DeleteImageLambdaVersionMXsaVkpE7YEPLpiaFCVe4zYIiBVLjeekgcvx17J8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteImageLambdaFunction"
              },
              "CodeSha256": "i69+2D7eC6VTdpri9LhXmcxmGzuzcVRr1Q6pVZE+smQ="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-s3-gb97-images-pos",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSignedurl": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "signedurl",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDeleteimage": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "deleteimage",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSignedurlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.filename": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSignedurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignedURLLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayS3gb97imagesposRequestValidator"
              }
            },
            "DependsOn": [
              "SignedURLLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodDeleteimageDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.querystring.filename": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceDeleteimage"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayS3gb97imagesposRequestValidator"
              }
            },
            "DependsOn": [
              "DeleteImageLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayS3gb97imagesposRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "s3-gb97-images-pos-prod | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1694107404248": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodSignedurlGet",
              "ApiGatewayMethodDeleteimageDelete"
            ]
          },
          "SignedURLLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignedURLLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "bucket-images-gb97-pos",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": false,
                "BlockPublicPolicy": false,
                "IgnorePublicAcls": false,
                "RestrictPublicBuckets": false
              }
            }
          },
          "SampleBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "S3Bucket"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Effect": "Allow",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "S3Bucket"
                          },
                          "/*"
                        ]
                      ]
                    },
                    "Principal": "*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-ServerlessDeploymentBucketName"
            }
          },
          "BaseLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "BaseLambdaLayer"
            },
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-BaseLambdaLayerQualifiedArn"
            }
          },
          "BaseLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "88f8db1f5deeea15fc23fcdef14eb8f0e442456c",
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-BaseLambdaLayerHash"
            }
          },
          "BaseLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z/nodejs.zip",
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-BaseLambdaLayerS3Key"
            }
          },
          "SignedURLLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignedURLLambdaVersionlzRfPCG5ENoBJT42wUyQzcweWqlwzBgJQTamETh8bs"
            },
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-SignedURLLambdaFunctionQualifiedArn"
            }
          },
          "DeleteImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteImageLambdaVersionMXsaVkpE7YEPLpiaFCVe4zYIiBVLjeekgcvx17J8"
            },
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-DeleteImageLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-s3-gb97-images-pos-prod-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "signedURL": {
        "handler": "signedurl/handler.signedS3URL",
        "package": {
          "patterns": [
            "signedurl/handler.js",
            "node_modules/**"
          ],
          "artifact": "/Users/johnango/Sites/GB97/uploadImagesS3-POS/.serverless/signedURL.zip"
        },
        "events": [
          {
            "http": {
              "path": "signedurl",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.querystring.filename": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "s3-gb97-images-pos-prod-signedURL",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "SignedURLLambdaVersionlzRfPCG5ENoBJT42wUyQzcweWqlwzBgJQTamETh8bs"
      },
      "deleteImage": {
        "handler": "deleteimg/handler.deleteImageFromS3",
        "package": {
          "patterns": [
            "deleteimage/handler.js",
            "node_modules/**"
          ],
          "artifact": "/Users/johnango/Sites/GB97/uploadImagesS3-POS/.serverless/deleteImage.zip"
        },
        "events": [
          {
            "http": {
              "path": "deleteimage",
              "method": "delete",
              "request": {
                "parameters": {
                  "method.request.querystring.filename": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "s3-gb97-images-pos-prod-deleteImage",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeleteImageLambdaVersionMXsaVkpE7YEPLpiaFCVe4zYIiBVLjeekgcvx17J8"
      }
    },
    "resources": {
      "Resources": {
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "bucket-images-gb97-pos",
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": false,
              "BlockPublicPolicy": false,
              "IgnorePublicAcls": false,
              "RestrictPublicBuckets": false
            }
          }
        },
        "SampleBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "S3Bucket"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "S3Bucket"
                        },
                        "/*"
                      ]
                    ]
                  },
                  "Principal": "*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "s3-gb97-images-pos",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!*/**"
        ],
        "artifactsS3KeyDirname": "serverless/s3-gb97-images-pos/prod/code-artifacts",
        "artifactDirectoryName": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "base": {
          "name": "prd-dependencies",
          "compatibleRuntimes": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"BaseLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
          },
          "package": {
            "artifact": "app/nodejs.zip"
          }
        }
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"layers\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/s3-gb97-images-pos/prod/1694107408923-2023-09-07T17:23:28.923Z",
    "artifact": ""
  }
}